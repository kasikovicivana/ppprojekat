Grammar

    0 $accept: program $end

    1 program: dictionary_list function_list

    2 dictionary_list: %empty
    3                | dictionary dictionary_list

    4 $@1: %empty

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE _RELOP _ID $@1 values_def _SEMICOLON

    6 values_def: %empty
    7           | _ASSIGN _LBRACKET values_list _RBRACKET

    8 values_list: value
    9            | values_list _COMMA value

   10 value: _LBRACKET literal _COMMA literal _RBRACKET

   11 function_list: function
   12              | function_list function

   13 $@2: %empty

   14 function: _TYPE _ID $@2 _LPAREN parameter _RPAREN body

   15 parameter: %empty
   16          | _TYPE _ID

   17 $@3: %empty

   18 body: _LBRACKET variable_list $@3 statement_list _RBRACKET

   19 variable_list: %empty
   20              | variable_list variable

   21 variable: _TYPE _ID _SEMICOLON

   22 statement_list: %empty
   23               | statement_list statement

   24 statement: compound_statement
   25          | assignment_statement
   26          | if_statement
   27          | return_statement

   28 compound_statement: _LBRACKET statement_list _RBRACKET

   29 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   30                     | assign_dict _ASSIGN num_exp _SEMICOLON

   31 num_exp: exp
   32        | num_exp _AROP exp

   33 exp: literal
   34    | _ID
   35    | function_call
   36    | _LPAREN num_exp _RPAREN
   37    | assign_dict

   38 assign_dict: _ID _LCORNER literal _RCORNER

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 $@4: %empty

   42 function_call: _ID $@4 _LPAREN argument _RPAREN

   43 argument: %empty
   44         | num_exp

   45 if_statement: if_part
   46             | if_part _ELSE statement

   47 @5: %empty

   48 $@6: %empty

   49 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN statement

   50 rel_exp: num_exp _RELOP num_exp

   51 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 14 16 21
_IF (259) 49
_ELSE (260) 46
_RETURN (261) 51
_ID (262) 5 14 16 21 29 34 38 42
_INT_NUMBER (263) 39
_UINT_NUMBER (264) 40
_LPAREN (265) 14 36 42 49
_RPAREN (266) 14 36 42 49
_LBRACKET (267) 7 10 18 28
_RBRACKET (268) 7 10 18 28
_ASSIGN (269) 7 29 30
_SEMICOLON (270) 5 21 29 30 51
_AROP (271) 32
_RELOP (272) 5 50
_MAP (273) 5
_COMMA (274) 5 9 10
_RCORNER (275) 38
_LCORNER (276) 38
ONLY_IF (277)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
dictionary_list (25)
    on left: 2 3, on right: 1 3
dictionary (26)
    on left: 5, on right: 3
$@1 (27)
    on left: 4, on right: 5
values_def (28)
    on left: 6 7, on right: 5
values_list (29)
    on left: 8 9, on right: 7 9
value (30)
    on left: 10, on right: 8 9
function_list (31)
    on left: 11 12, on right: 1 12
function (32)
    on left: 14, on right: 11 12
$@2 (33)
    on left: 13, on right: 14
parameter (34)
    on left: 15 16, on right: 14
body (35)
    on left: 18, on right: 14
$@3 (36)
    on left: 17, on right: 18
variable_list (37)
    on left: 19 20, on right: 18 20
variable (38)
    on left: 21, on right: 20
statement_list (39)
    on left: 22 23, on right: 18 23 28
statement (40)
    on left: 24 25 26 27, on right: 23 46 49
compound_statement (41)
    on left: 28, on right: 24
assignment_statement (42)
    on left: 29 30, on right: 25
num_exp (43)
    on left: 31 32, on right: 29 30 32 36 44 50 51
exp (44)
    on left: 33 34 35 36 37, on right: 31 32
assign_dict (45)
    on left: 38, on right: 30 37
literal (46)
    on left: 39 40, on right: 10 33 38
function_call (47)
    on left: 42, on right: 35
$@4 (48)
    on left: 41, on right: 42
argument (49)
    on left: 43 44, on right: 42
if_statement (50)
    on left: 45 46, on right: 26
if_part (51)
    on left: 49, on right: 45 46
@5 (52)
    on left: 47, on right: 49
$@6 (53)
    on left: 48, on right: 49
rel_exp (54)
    on left: 50, on right: 49
return_statement (55)
    on left: 51, on right: 27


State 0

    0 $accept: . program $end

    _MAP  shift, and go to state 1

    $default  reduce using rule 2 (dictionary_list)

    program          go to state 2
    dictionary_list  go to state 3
    dictionary       go to state 4


State 1

    5 dictionary: _MAP . _RELOP _TYPE _COMMA _TYPE _RELOP _ID $@1 values_def _SEMICOLON

    _RELOP  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: dictionary_list . function_list

    _TYPE  shift, and go to state 7

    function_list  go to state 8
    function       go to state 9


State 4

    3 dictionary_list: dictionary . dictionary_list

    _MAP  shift, and go to state 1

    $default  reduce using rule 2 (dictionary_list)

    dictionary_list  go to state 10
    dictionary       go to state 4


State 5

    5 dictionary: _MAP _RELOP . _TYPE _COMMA _TYPE _RELOP _ID $@1 values_def _SEMICOLON

    _TYPE  shift, and go to state 11


State 6

    0 $accept: program $end .

    $default  accept


State 7

   14 function: _TYPE . _ID $@2 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 12


State 8

    1 program: dictionary_list function_list .
   12 function_list: function_list . function

    _TYPE  shift, and go to state 7

    $default  reduce using rule 1 (program)

    function  go to state 13


State 9

   11 function_list: function .

    $default  reduce using rule 11 (function_list)


State 10

    3 dictionary_list: dictionary dictionary_list .

    $default  reduce using rule 3 (dictionary_list)


State 11

    5 dictionary: _MAP _RELOP _TYPE . _COMMA _TYPE _RELOP _ID $@1 values_def _SEMICOLON

    _COMMA  shift, and go to state 14


State 12

   14 function: _TYPE _ID . $@2 _LPAREN parameter _RPAREN body

    $default  reduce using rule 13 ($@2)

    $@2  go to state 15


State 13

   12 function_list: function_list function .

    $default  reduce using rule 12 (function_list)


State 14

    5 dictionary: _MAP _RELOP _TYPE _COMMA . _TYPE _RELOP _ID $@1 values_def _SEMICOLON

    _TYPE  shift, and go to state 16


State 15

   14 function: _TYPE _ID $@2 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 17


State 16

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE . _RELOP _ID $@1 values_def _SEMICOLON

    _RELOP  shift, and go to state 18


State 17

   14 function: _TYPE _ID $@2 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 19

    $default  reduce using rule 15 (parameter)

    parameter  go to state 20


State 18

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE _RELOP . _ID $@1 values_def _SEMICOLON

    _ID  shift, and go to state 21


State 19

   16 parameter: _TYPE . _ID

    _ID  shift, and go to state 22


State 20

   14 function: _TYPE _ID $@2 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 23


State 21

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE _RELOP _ID . $@1 values_def _SEMICOLON

    $default  reduce using rule 4 ($@1)

    $@1  go to state 24


State 22

   16 parameter: _TYPE _ID .

    $default  reduce using rule 16 (parameter)


State 23

   14 function: _TYPE _ID $@2 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 25

    body  go to state 26


State 24

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE _RELOP _ID $@1 . values_def _SEMICOLON

    _ASSIGN  shift, and go to state 27

    $default  reduce using rule 6 (values_def)

    values_def  go to state 28


State 25

   18 body: _LBRACKET . variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 19 (variable_list)

    variable_list  go to state 29


State 26

   14 function: _TYPE _ID $@2 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 14 (function)


State 27

    7 values_def: _ASSIGN . _LBRACKET values_list _RBRACKET

    _LBRACKET  shift, and go to state 30


State 28

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE _RELOP _ID $@1 values_def . _SEMICOLON

    _SEMICOLON  shift, and go to state 31


State 29

   18 body: _LBRACKET variable_list . $@3 statement_list _RBRACKET
   20 variable_list: variable_list . variable

    _TYPE  shift, and go to state 32

    $default  reduce using rule 17 ($@3)

    $@3       go to state 33
    variable  go to state 34


State 30

    7 values_def: _ASSIGN _LBRACKET . values_list _RBRACKET

    _LBRACKET  shift, and go to state 35

    values_list  go to state 36
    value        go to state 37


State 31

    5 dictionary: _MAP _RELOP _TYPE _COMMA _TYPE _RELOP _ID $@1 values_def _SEMICOLON .

    $default  reduce using rule 5 (dictionary)


State 32

   21 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 38


State 33

   18 body: _LBRACKET variable_list $@3 . statement_list _RBRACKET

    $default  reduce using rule 22 (statement_list)

    statement_list  go to state 39


State 34

   20 variable_list: variable_list variable .

    $default  reduce using rule 20 (variable_list)


State 35

   10 value: _LBRACKET . literal _COMMA literal _RBRACKET

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 42


State 36

    7 values_def: _ASSIGN _LBRACKET values_list . _RBRACKET
    9 values_list: values_list . _COMMA value

    _RBRACKET  shift, and go to state 43
    _COMMA     shift, and go to state 44


State 37

    8 values_list: value .

    $default  reduce using rule 8 (values_list)


State 38

   21 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 45


State 39

   18 body: _LBRACKET variable_list $@3 statement_list . _RBRACKET
   23 statement_list: statement_list . statement

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49
    _RBRACKET  shift, and go to state 50

    statement             go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    assign_dict           go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 40

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 41

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 42

   10 value: _LBRACKET literal . _COMMA literal _RBRACKET

    _COMMA  shift, and go to state 58


State 43

    7 values_def: _ASSIGN _LBRACKET values_list _RBRACKET .

    $default  reduce using rule 7 (values_def)


State 44

    9 values_list: values_list _COMMA . value

    _LBRACKET  shift, and go to state 35

    value  go to state 59


State 45

   21 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 21 (variable)


State 46

   49 if_part: _IF . _LPAREN @5 rel_exp $@6 _RPAREN statement

    _LPAREN  shift, and go to state 60


State 47

   51 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    num_exp        go to state 63
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67


State 48

   29 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   38 assign_dict: _ID . _LCORNER literal _RCORNER

    _ASSIGN   shift, and go to state 68
    _LCORNER  shift, and go to state 69


State 49

   28 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 22 (statement_list)

    statement_list  go to state 70


State 50

   18 body: _LBRACKET variable_list $@3 statement_list _RBRACKET .

    $default  reduce using rule 18 (body)


State 51

   23 statement_list: statement_list statement .

    $default  reduce using rule 23 (statement_list)


State 52

   24 statement: compound_statement .

    $default  reduce using rule 24 (statement)


State 53

   25 statement: assignment_statement .

    $default  reduce using rule 25 (statement)


State 54

   30 assignment_statement: assign_dict . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 71


State 55

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


State 56

   45 if_statement: if_part .
   46             | if_part . _ELSE statement

    _ELSE  shift, and go to state 72

    $default  reduce using rule 45 (if_statement)


State 57

   27 statement: return_statement .

    $default  reduce using rule 27 (statement)


State 58

   10 value: _LBRACKET literal _COMMA . literal _RBRACKET

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 73


State 59

    9 values_list: values_list _COMMA value .

    $default  reduce using rule 9 (values_list)


State 60

   49 if_part: _IF _LPAREN . @5 rel_exp $@6 _RPAREN statement

    $default  reduce using rule 47 (@5)

    @5  go to state 74


State 61

   34 exp: _ID .
   38 assign_dict: _ID . _LCORNER literal _RCORNER
   42 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _LCORNER  shift, and go to state 69

    _LPAREN   reduce using rule 41 ($@4)
    $default  reduce using rule 34 (exp)

    $@4  go to state 75


State 62

   36 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    num_exp        go to state 76
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67


State 63

   32 num_exp: num_exp . _AROP exp
   51 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 77
    _AROP       shift, and go to state 78


State 64

   31 num_exp: exp .

    $default  reduce using rule 31 (num_exp)


State 65

   37 exp: assign_dict .

    $default  reduce using rule 37 (exp)


State 66

   33 exp: literal .

    $default  reduce using rule 33 (exp)


State 67

   35 exp: function_call .

    $default  reduce using rule 35 (exp)


State 68

   29 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    num_exp        go to state 79
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67


State 69

   38 assign_dict: _ID _LCORNER . literal _RCORNER

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 80


State 70

   23 statement_list: statement_list . statement
   28 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49
    _RBRACKET  shift, and go to state 81

    statement             go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    assign_dict           go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 71

   30 assignment_statement: assign_dict _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    num_exp        go to state 82
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67


State 72

   46 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49

    statement             go to state 83
    compound_statement    go to state 52
    assignment_statement  go to state 53
    assign_dict           go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 73

   10 value: _LBRACKET literal _COMMA literal . _RBRACKET

    _RBRACKET  shift, and go to state 84


State 74

   49 if_part: _IF _LPAREN @5 . rel_exp $@6 _RPAREN statement

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    num_exp        go to state 85
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67
    rel_exp        go to state 86


State 75

   42 function_call: _ID $@4 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 87


State 76

   32 num_exp: num_exp . _AROP exp
   36 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 88
    _AROP    shift, and go to state 78


State 77

   51 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 51 (return_statement)


State 78

   32 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    exp            go to state 89
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67


State 79

   29 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   32 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 90
    _AROP       shift, and go to state 78


State 80

   38 assign_dict: _ID _LCORNER literal . _RCORNER

    _RCORNER  shift, and go to state 91


State 81

   28 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 28 (compound_statement)


State 82

   30 assignment_statement: assign_dict _ASSIGN num_exp . _SEMICOLON
   32 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 92
    _AROP       shift, and go to state 78


State 83

   46 if_statement: if_part _ELSE statement .

    $default  reduce using rule 46 (if_statement)


State 84

   10 value: _LBRACKET literal _COMMA literal _RBRACKET .

    $default  reduce using rule 10 (value)


State 85

   32 num_exp: num_exp . _AROP exp
   50 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 78
    _RELOP  shift, and go to state 93


State 86

   49 if_part: _IF _LPAREN @5 rel_exp . $@6 _RPAREN statement

    $default  reduce using rule 48 ($@6)

    $@6  go to state 94


State 87

   42 function_call: _ID $@4 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    $default  reduce using rule 43 (argument)

    num_exp        go to state 95
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67
    argument       go to state 96


State 88

   36 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 36 (exp)


State 89

   32 num_exp: num_exp _AROP exp .

    $default  reduce using rule 32 (num_exp)


State 90

   29 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 29 (assignment_statement)


State 91

   38 assign_dict: _ID _LCORNER literal _RCORNER .

    $default  reduce using rule 38 (assign_dict)


State 92

   30 assignment_statement: assign_dict _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


State 93

   50 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 62

    num_exp        go to state 97
    exp            go to state 64
    assign_dict    go to state 65
    literal        go to state 66
    function_call  go to state 67


State 94

   49 if_part: _IF _LPAREN @5 rel_exp $@6 . _RPAREN statement

    _RPAREN  shift, and go to state 98


State 95

   32 num_exp: num_exp . _AROP exp
   44 argument: num_exp .

    _AROP  shift, and go to state 78

    $default  reduce using rule 44 (argument)


State 96

   42 function_call: _ID $@4 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 99


State 97

   32 num_exp: num_exp . _AROP exp
   50 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 78

    $default  reduce using rule 50 (rel_exp)


State 98

   49 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN . statement

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49

    statement             go to state 100
    compound_statement    go to state 52
    assignment_statement  go to state 53
    assign_dict           go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 99

   42 function_call: _ID $@4 _LPAREN argument _RPAREN .

    $default  reduce using rule 42 (function_call)


State 100

   49 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN statement .

    $default  reduce using rule 49 (if_part)
